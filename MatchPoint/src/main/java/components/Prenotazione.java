package components;

import java.sql.Date;
import java.sql.Time;

//--------------------------------------------------------
//Code generated by Papyrus Java
//--------------------------------------------------------

/**
 * Classe che rappresenta una Prenotazione per un campo sportivo.
 */
public class Prenotazione {

    private int ID; // Identificativo univoco della prenotazione
    private Date data; // Data della prenotazione
    private Time oraInizio; // Ora di inizio della prenotazione
    private Time oraFine; // Ora di fine della prenotazione
    private int utenteID; // ID dell'utente che ha effettuato la prenotazione
    private int campoID; // ID del campo prenotato

    /**
     * Costruttore per una nuova prenotazione.
     * 
     * @param data      Data della prenotazione.
     * @param oraInizio Ora di inizio della prenotazione.
     * @param oraFine   Ora di fine della prenotazione.
     * @param utenteID  ID dell'utente.
     * @param campoID   ID del campo.
     */
    public Prenotazione(Date data, Time oraInizio, Time oraFine, int utenteID, int campoID) {
        this.data = data;
        this.oraInizio = oraInizio;
        this.oraFine = oraFine;
        this.utenteID = utenteID;
        this.campoID = campoID;
    }

    /**
     * Costruttore per una prenotazione esistente (include ID).
     * 
     * @param ID        Identificativo della prenotazione.
     * @param data      Data della prenotazione.
     * @param oraInizio Ora di inizio della prenotazione.
     * @param oraFine   Ora di fine della prenotazione.
     * @param utenteID  ID dell'utente.
     * @param campoID   ID del campo.
     */
    public Prenotazione(int ID, Date data, Time oraInizio, Time oraFine, int utenteID, int campoID) {
        this.ID = ID;
        this.data = data;
        this.oraInizio = oraInizio;
        this.oraFine = oraFine;
        this.utenteID = utenteID;
        this.campoID = campoID;
    }

    public int getId() {
        return ID;
    }

    public Date getData() {
        return data;
    }

    public Time getOraInizio() {
        return oraInizio;
    }

    public Time getOraFine() {
        return oraFine;
    }

    /**
     * Calcola la durata della prenotazione come un oggetto Time.
     * 
     * @return Durata della prenotazione come Time.
     * @throws IllegalArgumentException Se gli orari non sono validi.
     */
    public Time getDurata() {
        if (oraInizio == null || oraFine == null || oraFine.before(oraInizio)) {
            throw new IllegalArgumentException("Orari non validi. Assicurati che ora fine sia successivo a ora inizio.");
        }

        // Calcolare la durata in millisecondi
        long durataInMillis = oraFine.getTime() - oraInizio.getTime();

        // Convertire la durata in millisecondi in un oggetto Time
        return new Time(durataInMillis);
    }

    /**
     * Restituisce la durata della prenotazione in formato ore e minuti.
     * 
     * @return Durata in formato "HH:mm".
     */
    public String getDurataInFormatoOreMinuti() {
        Time durata = getDurata();

        // Convertire il tempo in ore e minuti
        long totalMinutes = durata.getTime() / 60000; // Convertire i millisecondi in minuti
        long ore = totalMinutes / 60;
        long minuti = totalMinutes % 60;

        // Restituire la durata in formato "HH:mm"
        return String.format("%02d:%02d", ore, minuti);
    }

    public int getCampoId() {
        return campoID;
    }

    public int getUtenteId() {
        return utenteID;
    }

    /**
     * Rappresentazione testuale della prenotazione.
     * 
     * @return Stringa contenente i dettagli della prenotazione.
     */
    @Override
    public String toString() {
        return String.format("Inizio: %s | Fine: %s | Utente ID: %d | Campo ID: %d",
                oraInizio, oraFine, utenteID, campoID);
    }
}
